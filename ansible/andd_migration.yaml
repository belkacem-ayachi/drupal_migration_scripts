---
# make sure that mysql workbench and client are installed on the server
# sudo apt install mysql-client-core-8.0
- name: Deploy Drupal Application
  hosts: servers
  become: yes
  become_user: root
  # vars_prompt:
  # - name: application_name
  #   prompt: "Enter the name of the application: "
  #   private: no
  # - name: database_name
  #   prompt: "Enter the name of the database: "
  #   private: no
  vars:
    clone_path : "home/christines/drupal_migration/andd"   
    scripts_path : "home/christines/drupal_migration/drupal_migration_scripts"

  tasks:
    - name: Duplicate application folder to ~/drupal_migration
      copy:
        src: /var/www/html/andd
        dest: /home/christines/drupal_migration
        remote_src: yes

    - name: Create apache-config folder
      file:
        path: /{{clone_path}}/apache-config
        state: directory

    - name: Copy Apache config file
      copy:
        src: /etc/apache2/sites-available/andd.conf
        dest: /{{clone_path}}/apache-config/andd.conf
        remote_src: yes

    - name: Installing mysql module for python
      pip:
        name:
          - mysql-connector-python
          - pymysql

    - name: Dockerfile creation
      command: python3 /{{ scripts_path }}/dockerfile_creation.py andd
      args:
        chdir: /{{ scripts_path }}
      register: script_output

    - name: Updated php settings  
      command: python3 /{{ scripts_path }}/update-php-settings.py andd
      args:
        chdir: /{{ scripts_path }}
      register: script_output


    - name: Copy Dockerfile to the correct directory 
      copy:
        src: /{{ scripts_path }}/andd/Dockerfile 
        dest: /{{ clone_path }}
        remote_src: yes

    - name: Copy php settings to the correct directory 
      copy:
        src: /{{ scripts_path }}/andd/settings_updates.php
        dest: /{{ clone_path }}
        remote_src: yes

    # - name: Database migration
    #   command: python3 /{{ scripts_path }}/db-migrate.py andd andd
    #   args:
    #     chdir: /{{ scripts_path }}
    #   register: script_output

    # - name: Display script output
    #   debug:
    #     var: script_output.stdout_lines

      
    - name: Build Docker image
      command: docker build -t drupaldevacr001.azurecr.io/drupal/andd:latest .
      args:
        chdir: /{{ clone_path }}
      register: script_output

    - name: Display image build output
      debug:
        var: script_output.stdout_lines

    - name: running docker image
      command: docker run -p 5001:80 -d drupaldevacr001.azurecr.io/drupal/andd:latest 

    # - name: Log in to Azure Imager Registry
    #   command: az login drupaldevacr001.azurecr.io -u <username> -p <PASSWORD>

    # - name: Push Docker image to Azure Container Registry
    #   command: docker push drupaldevacr001.azurecr.io/drupal/andd